In computer programming, a pure function is a function that has the following properties:[1][2]

    the function return values are identical for identical arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams, i.e., referential transparency), and
    the function has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or input/output streams).


    
    They always return the same value given the same arguments. - idempotent
    Running them causes no side effects

In short: pure functions don't do anything with anything that exists outside of their scope.


def find_max(nums):
    max_val = float("-inf")
    for num in nums:
        if max_val < num:
            max_val = num
    return max_val


# instead of returning a value
# this function modifies a global variable
global_max = float("-inf")

def find_max(nums):
    global global_max
    for num in nums:
        if global_max < num:
            global_max = num
