Pros:

    Very fast: At least it is in the average case
    In-Place: Saves on memory, doesn't need to do a lot of copying and allocating

Cons:

    Typically unstable: changes the relative order of elements with equal keys
    Recursive: can incur a performance penalty in some implementations
    Pivot sensitivity: if the pivot is poorly chosen, it can lead to poor performance


All this said, quicksort is widely used in the real world because the trade-offs are often worth it. For example, it's a default in PostgreSQL, a popular open-source database.

I'd also like to shoutout timsort, whicho is a hybrid sorting algorithm that uses a combination of merge sort and insertion sort. It's the default sorting algorithm used by the sorted function in Python.

Merge Sort
QuickSort
